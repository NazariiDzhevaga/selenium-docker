pipeline {

    agent {
        label 'docker'
    }

    parameters {
        choice choices: ['chrome', 'firefox'], description: 'Select the Browser', name: 'BROWSER'
        choice choices: ['0ne', 'TWO'], description: 'Select the Browser', name: 'TEST_SUITE'
    }

    stages {

        stage('Build Jar') {
            steps() {
                bat 'mvn clean package -DskipTests'
            }
        }

        stage('Build Image') {
            steps() {
                bat 'docker build -t=selenium/docker .'
            }
        }

        stage('Start Grid') {
            steps() {
                bat "docker-compose -f grid.yaml up --scale ${params.BROWSER}=2 -d"
            }
        }

        stage('Run Test') {
            steps() {
                bat "docker-compose -f test-suites.yaml up"
                script {
                    if(fileExists('output/flight-reservation/testng-failed.xml') || fileExists('output/vendor-portal/testng-failed.xml')){
                        error('failed tests found')
                    }
                }
            }
        }
    }

    post {
        always {
            bat "docker-compose -f grid.yaml down"
            bat "docker-compose -f test-suites.yaml down"
            archiveArtifacts artifacts: 'output/flight-reservation/emailable-report.html', followSymlinks: false
            archiveArtifacts artifacts: 'output/vendor-portal/emailable-report.html', followSymlinks: false
        }
    }
}
